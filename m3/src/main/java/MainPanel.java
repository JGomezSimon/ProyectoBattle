import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.io.IOException;

public class MainPanel extends JFrame {
    private JButton jugarButton;
    private JButton escogerPersonajeButton;
    private JButton escogerArmaButton;
    private JButton salirButton;
    private JButton confirmarButton;
    private JButton confirmarButton1;
    private JButton resetButton;
    private JButton rankingButton;
    private JPanel mainPanel;
    private final JDialog jDialog;

    public MainPanel() {
        super("main.project.battle");
        this.setPreferredSize(new Dimension(500, 300));
        this.setContentPane(mainPanel);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.pack();
        this.setLocationRelativeTo(null);

        // dialog to advise the player that can confirm before choosing
        JButton button = new JButton("Ok");
        jDialog = new JDialog(this, "", true);
        jDialog.add(new JLabel("You can't confirm before choosing"));
        jDialog.setLocationRelativeTo(null);
        jDialog.setLayout(new FlowLayout());
        jDialog.setSize(250, 100);
        jDialog.add(button);
        button.addActionListener(e -> jDialog.setVisible(false));

        escogerArmaButton.setEnabled(false);
        jugarButton.setEnabled(false);
        confirmarButton1.setEnabled(false);


        // Set-up of the buttons events to close and open panels
        escogerArmaButton.addActionListener(actionEvent -> {
            this.setVisible(false);
            Main.weaponPanel.setVisible(true);
        });
        escogerPersonajeButton.addActionListener(actionEvent -> {
            this.setVisible(false);
            Main.warriorPanel.setVisible(true);
        });
        confirmarButton.addActionListener(actionEvent -> {
            if (Main.player.getWarrior() != null) {
                escogerArmaButton.setEnabled(true);
                escogerPersonajeButton.setEnabled(false);
                confirmarButton.setEnabled(false);
                confirmarButton1.setEnabled(true);
            } else {
                jDialog.setVisible(true);
            }
        });
        confirmarButton1.addActionListener(actionEvent -> {
            if (Main.player.getWarrior().getWeapon() != null) {
                escogerArmaButton.setEnabled(false);
                jugarButton.setEnabled(true);
                confirmarButton1.setEnabled(false);
            } else {
                jDialog.setVisible(true);
            }
        });
        salirButton.addActionListener(actionEvent -> System.exit(0));
        jugarButton.addActionListener(actionEvent -> {
            jugarButton.setEnabled(false);
            try {
                Main.battlePanel = new BattlePanel();
            } catch (IOException e) {
                e.printStackTrace();
            }
            this.setVisible(false);
            Main.battlePanel.setVisible(true);
            escogerPersonajeButton.setEnabled(true);
            confirmarButton.setEnabled(true);
        });
        resetButton.addActionListener(actionEvent -> {
            try {
                Main.weaponPanel.dispose();
            } catch (NullPointerException ignored) {
            }
            Main.warriorPanel.dispose();
            try {
                Main.warriorPanel = new WarriorPanel();
            } catch (IOException e) {
                e.printStackTrace();
            }
            jugarButton.setEnabled(false);
            escogerPersonajeButton.setEnabled(true);
            escogerArmaButton.setEnabled(false);
            confirmarButton.setEnabled(true);
            confirmarButton1.setEnabled(false);
        });
        rankingButton.addActionListener(actionEvent -> {
            this.setVisible(false);
            Main.rankingPanel = new RankingPanel();
            Main.rankingPanel.setVisible(true);
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        mainPanel.setVisible(true);
        mainPanel.putClientProperty("html.disable", Boolean.FALSE);
        mainPanel.setBorder(BorderFactory.createTitledBorder(null, "", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        escogerPersonajeButton = new JButton();
        escogerPersonajeButton.setText("Choose Character");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(escogerPersonajeButton, gbc);
        escogerArmaButton = new JButton();
        escogerArmaButton.setText("Choose Weapon");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(escogerArmaButton, gbc);
        salirButton = new JButton();
        salirButton.setText("Exit");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(salirButton, gbc);
        jugarButton = new JButton();
        jugarButton.setText("Play");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(jugarButton, gbc);
        confirmarButton1 = new JButton();
        confirmarButton1.setText("Confirm");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(confirmarButton1, gbc);
        confirmarButton = new JButton();
        confirmarButton.setAlignmentY(1.0f);
        confirmarButton.setAutoscrolls(true);
        confirmarButton.setBorderPainted(true);
        confirmarButton.setText("Confirm");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(confirmarButton, gbc);
        resetButton = new JButton();
        resetButton.setBorderPainted(true);
        resetButton.setContentAreaFilled(true);
        resetButton.setDefaultCapable(true);
        resetButton.setDoubleBuffered(false);
        resetButton.setFocusable(true);
        resetButton.setIconTextGap(0);
        resetButton.setOpaque(true);
        resetButton.setPreferredSize(new Dimension(45, 25));
        resetButton.setText("âŸ³");
        resetButton.setVerifyInputWhenFocusTarget(true);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        mainPanel.add(resetButton, gbc);
        rankingButton = new JButton();
        rankingButton.setText("Ranking");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(rankingButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}